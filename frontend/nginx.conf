user  nginx;
worker_processes  1;

error_log  /var/log/nginx/nginx-error.log warn;
pid        /var/run/nginx.pid;

events {
  worker_connections  1024;
}

http {
  include       /etc/nginx/mime.types;
  default_type  application/octet-stream;

  log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';
  access_log /var/log/nginx/nginx-access.log  main;

  sendfile        on;
  #tcp_nopush     on;

  keepalive_timeout  65;

  # Define a limit zone (shared memory for tracking requests)
  limit_req_zone $binary_remote_addr zone=auth_limit:10m rate=1r/s;

  # gzip  on;
  # HSTS for 2 years
  add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload";
  add_header Content-Security-Policy "frame-ancestors 'none'";
  add_header X-Content-Type-Options "nosniff";
  add_header Referrer-Policy "same-origin";

  server {
    listen 80;
    # Redirect all http to https.
    return 301 https://$host$request_uri;
  }

  server {
    listen 443 ssl;
    server_name librameta.net www.librameta.net;
    ssl_certificate     /etc/ssl/domain.cert.pem;
    ssl_certificate_key /etc/ssl/private.key.pem;
    # ssl_trusted_certificate /etc/ssl/intermediate.cert.pem;
    ssl_protocols       TLSv1 TLSv1.1 TLSv1.2 TLSv1.3;
    ssl_ciphers         HIGH:!aNULL:!MD5;

    location / {
      return 301 https://annas-archive.org/;
    }
  }

  server {
    listen 443 ssl;
    server_name x.librameta.net box localhost;
    ssl_certificate     /etc/ssl/domain.cert.pem;
    ssl_certificate_key /etc/ssl/private.key.pem;
    # ssl_trusted_certificate /etc/ssl/intermediate.cert.pem;
    ssl_protocols       TLSv1 TLSv1.1 TLSv1.2 TLSv1.3;
    ssl_ciphers         HIGH:!aNULL:!MD5;

    proxy_set_header Host $host;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Real-IP       $remote_addr;
    real_ip_header   X-Forwarded-For;
    real_ip_recursive on;

    location / {
      proxy_pass http://127.0.0.1:8000;
    }

    location /static/ {
      alias /var/www/static/;
      # Cache images for 2 weeks.
      location ~* \.(jpg|jpeg|png|gif|ico|woff|woff2|ttf|svg|eot)$ {
        expires 14d;
        add_header Cache-Control "public, max-age=604800, must-revalidate";
      }
    }

    location = /robots.txt {
      alias /var/www/static/robots.txt;
    }

    location /health {
      # dont log health checks
      access_log off;
      proxy_pass http://127.0.0.1:8000;
    }

    location /mb {
      alias /var/www/admin/;
      charset utf-8;
      autoindex on;
      auth_basic "Password required";
      auth_basic_user_file /run/secrets/htpasswd;
      # Apply the rate limit
      limit_req zone=auth_limit burst=5 nodelay;
    }

    location /files/ {
      alias /var/www/files/;

      auth_basic "Password required";
      auth_basic_user_file /run/secrets/files_htpasswd;
      # Apply the rate limit
      limit_req zone=auth_limit burst=5 nodelay;
    }
  }
}
